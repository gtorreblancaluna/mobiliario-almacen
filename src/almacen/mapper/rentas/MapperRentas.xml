<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="MapperRentas">

    <resultMap id="resultMapRenta" type="common.model.Renta">
        
        <result property="rentaId" column="id_renta"/>
        <!-- customer info-->
        <result property="cliente.id" column="cliente_id"/>
        <result property="cliente.nombre" column="cliente_nombre"/>
        <result property="cliente.apellidos" column="cliente_apellidos"/>
        <!--user info-->
        <result property="usuario.usuarioId" column="usuario_id"/>
        <result property="usuario.nombre" column="usuario_nombre"/>
        <result property="usuario.apellidos" column="usuario_apellidos"/>
        
        <result property="fechaPedido" column="fecha_pedido"/>
        <result property="fechaEntrega" column="fecha_entrega"/>
        <result property="horaEntrega" column="hora_entrega"/>
        <result property="fechaDevolucion" column="fecha_devolucion"/>
        <result property="horaDevolucion" column="hora_devolucion"/>
        <result property="descripcion" column="descripcion"/>
        <result property="folio" column="folio"/>
        <!--event type-->
        <result property="tipo.tipoId" column="tipo_id"/>
        <result property="tipo.tipo" column="tipo_tipo"/>      
        <result property="fechaEvento" column="fecha_evento"/>
        <!-- driver info-->
        <result property="chofer.usuarioId" column="chofer_id"/>
        <result property="chofer.nombre" column="chofer_nombre"/>
        <result property="chofer.apellidos" column="chofer_apellidos"/>
        <!--status event-->
        <result property="estado.estadoId" column="id_estado"/>
        <result property="estado.descripcion" column="estado_descripcion"/>
          
    </resultMap>
    
    <resultMap id="resultMapTipoAbono" type="common.model.TipoAbono">        
        <result property="tipoAbonoId" column="id_tipo_abono"/>
        <result property="descripcion" column="descripcion"/>
        <result property="fgActivo" column="fg_activo"/>
        <result property="fechaRegistro" column="fecha_registro"/>
      
    </resultMap> 
    
        <resultMap id="resultMapDetalleRenta" type="common.model.DetalleRenta">        
        
        <result property="detalleRentaId" column="id_detalle_renta"/>
        <result property="rentaId" column="id_renta"/>
        <result property="cantidad" column="cantidad"/>
        <result property="precioUnitario" column="p_unitario"/>
        <result property="porcentajeDescuento" column="porcentaje_descuento"/>

        <result property="articulo.cantidad" column="item_cantidad"/>
        <result property="articulo.articuloId" column="item_id"/>
        <result property="articulo.descripcion" column="item_description"/>
        <result property="articulo.color.color" column="item_color"/>
        <result property="articulo.codigo" column="item_codigo"/>
        <result property="articulo.precioCompra" column="item_purchase_amount"/>
        
        <result property="articulo.rentados" column="rentados" />
        <result property="articulo.faltantes" column="faltantes" />
        <result property="articulo.reparacion" column="reparacion" />
        <result property="articulo.accidenteTrabajo" column="accidente_trabajo" />
        <result property="articulo.devolucion" column="devolucion" />
        
        <result property="articulo.totalCompras" column="total_compras" />
        <result property="articulo.totalShopProvider" column="total_shop_provider" />
      
    </resultMap> 

    <select id="getEventsBetweenDeliveryDate" resultMap="resultMapRenta" parameterType="java.util.Map">
        SELECT
            r.id_renta,
            c.id_clientes AS cliente_id,
            c.nombre AS cliente_nombre,
            c.apellidos AS cliente_apellidos,
            u.id_usuarios AS usuario_id,
            u.nombre AS usuario_nombre,
            u.apellidos AS usuario_apellidos,
            r.fecha_pedido,
            r.fecha_entrega,
            r.hora_entrega,
            r.fecha_devolucion,
            r.descripcion,
            r.descuento,
            r.cantidad_descuento,
            r.iva,
            r.comentario,
            r.folio,
            r.stock,
            t.id_tipo AS tipo_id,
            t.tipo AS tipo_tipo,
            r.hora_devolucion,
            r.fecha_evento,
            r.deposito_garantia,
            r.envio_recoleccion,
            r.mostrar_precios_pdf,
            chofer.id_usuarios AS chofer_id,
            chofer.nombre AS chofer_nombre,
            chofer.apellidos AS chofer_apellidos,
            e.id_estado,
            e.descripcion AS estado_descripcion
        FROM renta r
            INNER JOIN estado e ON (e.id_estado = r.id_estado)
            INNER JOIN clientes c ON (c.id_clientes = r.id_clientes)
            INNER JOIN usuarios u ON (u.id_usuarios = r.id_usuarios)
            INNER JOIN usuarios chofer ON (chofer.id_usuarios = r.id_usuario_chofer)
            INNER JOIN tipo t ON (t.id_tipo = r.id_tipo)
        
        <if test="type != null and type != '' and type != 0 ">
            AND t.id_tipo = #{type}
        </if>
        <if test="initDeliveryDate != null and endDeliveryDate != null ">
            AND STR_TO_DATE(r.fecha_entrega,'%d/%m/%Y') BETWEEN STR_TO_DATE(#{initDeliveryDate},'%d/%m/%Y') AND STR_TO_DATE(#{endDeliveryDate},'%d/%m/%Y')
        </if>
        <if test="statusId != null ">
            <foreach item="item" index="index" collection="statusId"
                    open="AND r.id_estado IN (" separator="," close=")" >
                        #{item}
                </foreach>
        </if>
        <if test="driverId != null and driverId != '' and driverId != 0 ">
            AND r.id_usuario_chofer = #{driverId}
        </if>
        <if test="userByCategoryId != null and userByCategoryId != '' ">
            AND #{userByCategoryId} IN (
                SELECT u.id_usuarios        
                    FROM usuarios u
                    WHERE u.id_usuarios IN (
                            SELECT asigna_categoria.id_usuarios 
                            FROM asigna_categoria asigna_categoria 
                            WHERE asigna_categoria.id_categoria IN (
                                SELECT articulo.id_categoria FROM detalle_renta detalle_renta
                                INNER JOIN articulo articulo ON (detalle_renta.id_articulo = articulo.id_articulo)
                                WHERE detalle_renta.id_renta = r.id_renta
                            ) 
                    )
                    AND u.activo = 1
            )
        </if>
        
        ORDER BY STR_TO_DATE(r.fecha_entrega, '%d/%m/%Y')
        
    </select>
    
    
    <select id="getByParameters" resultMap="resultMapRenta" parameterType="java.util.Map">
        SELECT
            r.id_renta,
            c.id_clientes AS cliente_id,
            c.nombre AS cliente_nombre,
            c.apellidos AS cliente_apellidos,
            u.id_usuarios AS usuario_id,
            u.nombre AS usuario_nombre,
            u.apellidos AS usuario_apellidos,
            r.fecha_pedido,
            r.fecha_entrega,
            r.hora_entrega,
            r.fecha_devolucion,
            r.descripcion,
            r.descuento,
            r.cantidad_descuento,
            r.iva,
            r.comentario,
            r.folio,
            r.stock,
            t.id_tipo AS tipo_id,
            t.tipo AS tipo_tipo,
            r.hora_devolucion,
            r.fecha_evento,
            r.deposito_garantia,
            r.envio_recoleccion,
            r.mostrar_precios_pdf,
            chofer.id_usuarios AS chofer_id,
            chofer.nombre AS chofer_nombre,
            chofer.apellidos AS chofer_apellidos,
            e.id_estado,
            e.descripcion AS estado_descripcion
        FROM renta r
            INNER JOIN estado e ON (e.id_estado = r.id_estado)
            INNER JOIN clientes c ON (c.id_clientes = r.id_clientes)
            INNER JOIN usuarios u ON (u.id_usuarios = r.id_usuarios)
            INNER JOIN usuarios chofer ON (chofer.id_usuarios = r.id_usuario_chofer)
            INNER JOIN tipo t ON (t.id_tipo = r.id_tipo)
        <if test="folio != null">
            <foreach item="item" index="index" collection="folio"
                    open="AND r.folio IN (" separator="," close=")" >
                        #{item}
                </foreach>
        </if>
        <if test="type != null and type != '' and type != 0 ">
            AND t.id_tipo = #{type}
        </if>
        <if test="initDate != null and endDate != null ">
            AND STR_TO_DATE(r.fecha_entrega,'%d/%m/%Y') BETWEEN STR_TO_DATE(#{initDate},'%d/%m/%Y') AND STR_TO_DATE(#{endDate},'%d/%m/%Y')
        </if>
        <if test="statusId != null ">
            <foreach item="item" index="index" collection="statusId"
                    open="AND r.id_estado IN (" separator="," close=")" >
                        #{item}
                </foreach>
        </if>
        <if test="userByCategoryId != null and userByCategoryId != '' ">
            AND #{userByCategoryId} IN (
                SELECT u.id_usuarios        
                    FROM usuarios u
                    WHERE u.id_usuarios IN (
                            SELECT asigna_categoria.id_usuarios 
                            FROM asigna_categoria asigna_categoria 
                            WHERE asigna_categoria.id_categoria IN (
                                SELECT articulo.id_categoria FROM detalle_renta detalle_renta
                                INNER JOIN articulo articulo ON (detalle_renta.id_articulo = articulo.id_articulo)
                                WHERE detalle_renta.id_renta = r.id_renta
                            ) 
                    )
                    AND u.activo = 1
            )
        </if>
        
        ORDER BY STR_TO_DATE(r.fecha_entrega, '%d/%m/%Y')
        
    </select>
    
    <select id="getByIds" resultMap="resultMapRenta" parameterType="java.util.List">
        SELECT
            r.id_renta,
            c.id_clientes AS cliente_id,
            c.nombre AS cliente_nombre,
            c.apellidos AS cliente_apellidos,
            u.id_usuarios AS usuario_id,
            u.nombre AS usuario_nombre,
            u.apellidos AS usuario_apellidos,
            r.fecha_pedido,
            r.fecha_entrega,
            r.hora_entrega,
            r.fecha_devolucion,
            r.descripcion,
            r.descuento,
            r.cantidad_descuento,
            r.iva,
            r.comentario,
            r.folio,
            r.stock,
            t.id_tipo AS tipo_id,
            t.tipo AS tipo_tipo,
            r.hora_devolucion,
            r.fecha_evento,
            r.deposito_garantia,
            r.envio_recoleccion,
            r.mostrar_precios_pdf,
            chofer.id_usuarios AS chofer_id,
            chofer.nombre AS chofer_nombre,
            chofer.apellidos AS chofer_apellidos,
            e.id_estado,
            e.descripcion AS estado_descripcion
        FROM renta r
            INNER JOIN estado e ON (e.id_estado = r.id_estado)
            INNER JOIN clientes c ON (c.id_clientes = r.id_clientes)
            INNER JOIN usuarios u ON (u.id_usuarios = r.id_usuarios)
            INNER JOIN usuarios chofer ON (chofer.id_usuarios = r.id_usuario_chofer)
            INNER JOIN tipo t ON (t.id_tipo = r.id_tipo)
            <foreach item="item" index="index" collection="list"
                    open="WHERE r.id_renta IN (" separator="," close=")" >
                        #{item}
            </foreach>
        
    </select>
    
    <update id="updateChofer" parameterType="java.util.Map">
        UPDATE renta r 
        SET r.id_usuario_chofer = #{choferId}
        WHERE r.id_renta = #{rentaId}

    </update>
    
    <update id="updateStatusFromApartadoToEnRenta" parameterType="java.util.Map">
        UPDATE renta r SET r.id_estado = #{estadoIdInRent}
        <foreach item="item" index="index" collection="ids"
                open="WHERE r.id_renta IN (" separator="," close=")" >
                    #{item}
        </foreach>
    </update>
    
    <select id="getTipoAbonos" resultMap="resultMapTipoAbono">
        SELECT tipo.id_tipo_abono,
                tipo.descripcion,
                tipo.fg_activo,
                tipo.fecha_registro
        FROM tipo_abono tipo
        WHERE tipo.fg_activo=1 
        ORDER BY tipo.descripcion
    </select>
    
    <select id="getDetailByRentId" resultMap="resultMapDetalleRenta" parameterType="java.lang.String">
        SELECT d.*,
            articulo.id_articulo AS item_id,
            articulo.descripcion AS item_description,
            articulo.precio_compra AS item_purchase_amount,
            c.color AS item_color,
            articulo.codigo AS item_codigo,
            d.porcentaje_descuento,
            d.p_unitario AS p_unitario
        FROM detalle_renta d
        INNER JOIN articulo articulo ON (articulo.id_articulo = d.id_articulo)
        INNER JOIN color c ON (c.id_color = articulo.id_color)
        WHERE d.id_renta = #{id}
        ORDER BY articulo.descripcion
    </select>
    
        <select id="getById" resultMap="resultMapRenta" parameterType="java.lang.Integer">
        SELECT
            r.id_renta,
            c.id_clientes AS cliente_id,
            c.nombre AS cliente_nombre,
            c.apellidos AS cliente_apellidos,
            u.id_usuarios AS usuario_id,
            u.nombre AS usuario_nombre,
            u.apellidos AS usuario_apellidos,
            r.fecha_pedido,
            r.fecha_entrega,
            r.hora_entrega,
            r.fecha_devolucion,
            r.descripcion,
            r.descuento,
            r.cantidad_descuento,
            r.iva,
            r.comentario,
            r.folio,
            r.stock,
            t.id_tipo AS tipo_id,
            t.tipo AS tipo_tipo,
            r.hora_devolucion,
            r.fecha_evento,
            r.deposito_garantia,
            r.envio_recoleccion,
            r.mostrar_precios_pdf,
            chofer.id_usuarios AS chofer_id,
            chofer.nombre AS chofer_nombre,
            chofer.apellidos AS chofer_apellidos,
            e.id_estado,
            e.descripcion AS estado_descripcion,
            (
                SELECT SUM(a.abono)
                FROM abonos a 
                WHERE a.id_renta = #{id}
            ) AS total_abonos,
            (
                SELECT SUM(IF( ( f.fg_devolucion = '0' AND f.fg_accidente_trabajo = '0'),(f.cantidad * f.precio_cobrar),0) )AS total
                FROM faltantes f
                INNER JOIN articulo a ON (f.id_articulo = a.id_articulo)
                WHERE f.id_renta=#{id}
                AND f.fg_activo = '1'
            ) AS total_faltantes,
            (
                SELECT IF(porcentaje_descuento >= 0,
                (SUM( (cantidad*p_unitario) - ((cantidad*p_unitario) * (porcentaje_descuento / 100) ))),
                (SUM( (cantidad*p_unitario) ))) AS suma
                FROM detalle_renta WHERE id_renta = #{id}
            ) AS sub_total
        FROM renta r
            INNER JOIN estado e ON (e.id_estado = r.id_estado)
            INNER JOIN clientes c ON (c.id_clientes = r.id_clientes)
            INNER JOIN usuarios u ON (u.id_usuarios = r.id_usuarios)
            INNER JOIN usuarios chofer ON (chofer.id_usuarios = r.id_usuario_chofer)
            INNER JOIN tipo t ON (t.id_tipo = r.id_tipo)
        WHERE r.id_renta = #{id}
    </select>
    
    
    <select id="getByFolio" resultMap="resultMapRenta" parameterType="java.lang.Integer">
        SELECT
            r.id_renta,
            c.id_clientes AS cliente_id,
            c.nombre AS cliente_nombre,
            c.apellidos AS cliente_apellidos,
            u.id_usuarios AS usuario_id,
            u.nombre AS usuario_nombre,
            u.apellidos AS usuario_apellidos,
            r.fecha_pedido,
            r.fecha_entrega,
            r.hora_entrega,
            r.fecha_devolucion,
            r.descripcion,
            r.descuento,
            r.cantidad_descuento,
            r.iva,
            r.comentario,
            r.folio,
            r.stock,
            t.id_tipo AS tipo_id,
            t.tipo AS tipo_tipo,
            r.hora_devolucion,
            r.fecha_evento,
            r.deposito_garantia,
            r.envio_recoleccion,
            r.mostrar_precios_pdf,
            chofer.id_usuarios AS chofer_id,
            chofer.nombre AS chofer_nombre,
            chofer.apellidos AS chofer_apellidos,
            e.id_estado,
            e.descripcion AS estado_descripcion,
            (
                SELECT SUM(a.abono)
                FROM abonos a 
                WHERE a.id_renta = #{id}
            ) AS total_abonos,
            (
                SELECT SUM(IF( ( f.fg_devolucion = '0' AND f.fg_accidente_trabajo = '0'),(f.cantidad * f.precio_cobrar),0) )AS total
                FROM faltantes f
                INNER JOIN articulo a ON (f.id_articulo = a.id_articulo)
                WHERE f.id_renta=#{id}
                AND f.fg_activo = '1'
            ) AS total_faltantes,
            (
                SELECT IF(porcentaje_descuento >= 0,
                (SUM( (cantidad*p_unitario) - ((cantidad*p_unitario) * (porcentaje_descuento / 100) ))),
                (SUM( (cantidad*p_unitario) ))) AS suma
                FROM detalle_renta WHERE id_renta = #{id}
            ) AS sub_total
        FROM renta r
            INNER JOIN estado e ON (e.id_estado = r.id_estado)
            INNER JOIN clientes c ON (c.id_clientes = r.id_clientes)
            INNER JOIN usuarios u ON (u.id_usuarios = r.id_usuarios)
            INNER JOIN usuarios chofer ON (chofer.id_usuarios = r.id_usuario_chofer)
            INNER JOIN tipo t ON (t.id_tipo = r.id_tipo)
        WHERE r.folio = #{folio}
    </select>
    
      
</mapper>